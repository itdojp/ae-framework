name: Verify Lite

on:
  pull_request:
  push:
    branches: [main]
    tags: ['v*']
  workflow_dispatch:

jobs:
  verify-lite:
    runs-on: ubuntu-latest
    steps:
      - name: Coverage policy (note)
        run: |
          printf "%s\n" "Coverage policy (for reference):" \
          && printf "%s\n" "- Enforce on main: ${COVERAGE_ENFORCE_MAIN:-0}" \
          && printf "%s\n" "- Default threshold: ${COVERAGE_DEFAULT_THRESHOLD:-80} (override via coverage:<pct>)"
        env:
          COVERAGE_ENFORCE_MAIN: ${{ vars.COVERAGE_ENFORCE_MAIN }}
          COVERAGE_DEFAULT_THRESHOLD: ${{ vars.COVERAGE_DEFAULT_THRESHOLD }}
      - uses: actions/checkout@v4
      - name: Prepare pnpm
        uses: ./.github/actions/setup-pnpm
      - name: Enable corepack
        run: corepack enable
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'
      - name: Install dependencies
        run: pnpm install --frozen-lockfile || pnpm install --no-frozen-lockfile
      - name: Pre-build workspace types (spec-compiler)
        run: pnpm -F @ae-framework/spec-compiler -s run build || true
      - name: Type check (strict verify)
        run: pnpm types:check
      - name: Lint
        run: pnpm lint || true
      - name: Build
        run: pnpm run build
      - name: BDD lint (non-blocking)
        continue-on-error: true
        run: |
          if [ -f scripts/bdd/lint.mjs ]; then node scripts/bdd/lint.mjs; else printf "No BDD linter\n"; fi
      - name: BDD lint (strict; label-gated)
        if: ${{ github.event_name == 'pull_request' && contains(github.event.pull_request.labels.*.name, 'enforce-bdd-lint') }}
        env:
          BDD_LINT_STRICT: '1'
          BDD_ROOTS: ${{ vars.BDD_ROOTS }}
        run: |
          node scripts/bdd/lint.mjs
      - name: BDD â†’ LTL suggestions (report-only)
        run: |
          if npm run -s | grep -q "bdd:suggest"; then pnpm -s run bdd:suggest; else printf "No BDD suggest script\n"; fi
      - name: Formal tools check (non-blocking)
        continue-on-error: true
        run: |
          if [ -f scripts/formal/tools-check.mjs ]; then node scripts/formal/tools-check.mjs; fi
      - name: "Run formal (label gated: run-formal)"
        if: ${{ github.event_name != 'pull_request' || contains(github.event.pull_request.labels.*.name, 'run-formal') }}
        run: |
          node scripts/formal/verify-conformance.mjs || true
          node scripts/formal/verify-alloy.mjs || true
          node scripts/formal/verify-tla.mjs --engine=tlc || true
          node scripts/formal/verify-smt.mjs --solver=cvc5 || true
          node scripts/formal/verify-kani.mjs || true
          node scripts/formal/presets-apply.mjs || true
          node scripts/formal/aggregate-formal.mjs || true
          node scripts/formal/print-summary.mjs || true
      - name: Aggregate adapters/formal/properties (non-blocking)
        continue-on-error: true
        run: |
          if npm run -s | grep -q "artifacts:aggregate"; then pnpm -s run artifacts:aggregate; fi
          node scripts/simulation/deterministic-runner.mjs || true
      - name: Resilience quick (label-gated, non-blocking)
        if: ${{ github.event_name == 'pull_request' && contains(github.event.pull_request.labels.*.name, 'run-resilience') }}
        continue-on-error: true
        run: |
          pnpm -s vitest run "tests/resilience/**/*.fast.*.test.ts" --reporter=verbose --run --coverage=false || true
      - name: BDD step lint (non-blocking)
        continue-on-error: true
        run: |
          if [ -f scripts/bdd/step-lint.mjs ]; then node scripts/bdd/step-lint.mjs || true; fi
      - name: BDD step lint (strict; label-gated)
        if: ${{ github.event_name == 'pull_request' && contains(github.event.pull_request.labels.*.name, 'enforce-bdd-lint') }}
        run: |
          if [ -f scripts/bdd/step-lint.mjs ]; then node scripts/bdd/step-lint.mjs; fi
      - name: Render PR summary (digest)
        env:
          SUMMARY_MODE: digest
          SUMMARY_LANG: ${{ (github.event.pull_request && contains(github.event.pull_request.labels.*.name, 'lang:ja')) && 'ja' || 'en' }}
        run: |
          if [ -f scripts/summary/render-pr-summary.mjs ]; then node scripts/summary/render-pr-summary.mjs; fi
          [ -f artifacts/summary/PR_SUMMARY.md ] && cat artifacts/summary/PR_SUMMARY.md >> "$GITHUB_STEP_SUMMARY" || true
      - name: Mutation quick (auto-diff)
        if: ${{ github.event_name == 'pull_request' }}
        continue-on-error: true
        run: |
          if [ -x scripts/mutation/run-scoped.sh ]; then
            ./scripts/mutation/run-scoped.sh --quick --auto-diff || true
          else
            echo "scripts/mutation/run-scoped.sh not available; skipping mutation quick run"
          fi
      - name: Mutation quick summary
        if: ${{ github.event_name == 'pull_request' }}
        run: |
          if [ -f reports/mutation/mutation.json ]; then
            node scripts/mutation/post-quick-summary.mjs | tee mutation-summary.md
            cat mutation-summary.md >> "$GITHUB_STEP_SUMMARY"
          else
            printf 'No mutation report found; skipped summary.\n' | tee mutation-summary.md >> "$GITHUB_STEP_SUMMARY"
          fi
      - name: Mutation survivors JSON
        if: ${{ github.event_name == 'pull_request' }}
        run: |
          if [ -f reports/mutation/mutation.json ]; then
            mkdir -p reports/mutation
            node scripts/mutation/list-survivors.mjs --limit 50 > reports/mutation/survivors.json
            survivors_for_summary="$(node scripts/mutation/list-survivors.mjs --limit 10)"
            {
              printf '## Mutation survivors (top 10)\n'
              printf '```json\n%s\n```\n' "$survivors_for_summary"
            } >> "$GITHUB_STEP_SUMMARY"
          else
            printf 'No mutation report found; skipped survivors extraction.\n' >> "$GITHUB_STEP_SUMMARY"
          fi
      - name: Upload mutation survivors artifact
        if: ${{ github.event_name == 'pull_request' && hashFiles('reports/mutation/survivors.json') != '' }}
        uses: actions/upload-artifact@v4
        with:
          name: mutation-survivors-json
          path: reports/mutation/survivors.json
