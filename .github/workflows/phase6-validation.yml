name: Phase 6 UI/UX Quality Gates
on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review, labeled]
    paths: ['src/ui/**', 'examples/**', 'packages/ui/**', 'apps/web/**']
concurrency:
  group: phase6-${{ github.ref }}
  cancel-in-progress: true

jobs:
  accessibility-audit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with: { node-version: '20', cache: 'pnpm' }
      - run: corepack enable
      - run: pnpm install --frozen-lockfile || pnpm install --no-frozen-lockfile
      - name: Run accessibility tests
        run: |
          pnpm run test:a11y
          pnpm run test:a11y:report
      - name: Accessibility gate check
        run: node scripts/check-a11y-threshold.cjs --env=ci

  visual-regression:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with: { node-version: '20', cache: 'pnpm' }
      - run: corepack enable
      - run: pnpm install --frozen-lockfile || pnpm install --no-frozen-lockfile
      - run: pnpm run build-storybook
      - name: Run visual regression tests
        run: |
          pnpm run test:visual
          pnpm run test:visual:report

  lighthouse-ci:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with: { node-version: '20', cache: 'pnpm' }
      - run: corepack enable
      - run: pnpm install --frozen-lockfile || pnpm install --no-frozen-lockfile
      - name: Build application
        run: pnpm run build:frontend
      - name: Run Lighthouse CI
        run: |
          npm install -g @lhci/cli
          lhci autorun
        env:
          LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}

  opa-policy-validation:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup OPA
        uses: open-policy-agent/setup-opa@v2
        with: { version: latest }
      - name: Validate UI components policy
        run: opa eval -d policies/ui/ -i src/ui/components/ "data.ui.violations"
      - name: Check policy compliance
        run: node scripts/check-opa-compliance.js --ui-violations=0

  coverage-gate:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with: { node-version: '20', cache: 'pnpm' }
      - run: corepack enable
      - run: pnpm install --frozen-lockfile || pnpm install --no-frozen-lockfile
      - name: Run tests with coverage
        run: pnpm run test:coverage
      - name: Coverage threshold check
        run: node scripts/check-coverage-threshold.cjs --env=ci
