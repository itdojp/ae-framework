name: Phase 6 UI/UX Quality Gates
on:
  pull_request:
    paths: ['src/ui/**', 'examples/**', 'packages/ui/**', 'apps/web/**']

jobs:
  accessibility-audit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with: { node-version: '20', cache: 'npm' }
      - run: npm ci
      - name: Run accessibility tests
        run: |
          npm run test:a11y
          npm run test:a11y:report
      - name: Accessibility gate check
        run: node scripts/check-a11y-threshold.cjs --env=ci

  visual-regression:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with: { node-version: '20', cache: 'npm' }
      - run: npm ci
      - run: npm run build-storybook
      - name: Run visual regression tests
        run: |
          npm run test:visual
          npm run test:visual:report

  lighthouse-ci:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with: { node-version: '20', cache: 'npm' }
      - run: npm ci
      - name: Build application
        run: npm run build:frontend
      - name: Run Lighthouse CI
        run: |
          npm install -g @lhci/cli
          lhci autorun
        env:
          LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}

  opa-policy-validation:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup OPA
        uses: open-policy-agent/setup-opa@v2
        with: { version: latest }
      - name: Validate UI components policy
        run: opa eval -d policies/ui/ -i src/ui/components/ "data.ui.violations"
      - name: Check policy compliance
        run: node scripts/check-opa-compliance.js --ui-violations=0

  coverage-gate:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with: { node-version: '20', cache: 'npm' }
      - run: npm ci
      - name: Run tests with coverage
        run: npm run test:coverage
      - name: Coverage threshold check
        run: node scripts/check-coverage-threshold.cjs --env=ci