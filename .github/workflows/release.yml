name: Release
on:
  push:
    tags:
      - 'v*'

jobs:
  # Ensure quality gates pass before release
  quality-check:
    name: Quality Check
    uses: ./.github/workflows/quality-gates-centralized.yml
    with:
      environment: production

  # Run fast CI tests
  ci-check:
    name: CI Check  
    uses: ./.github/workflows/ci-fast.yml

  # Main release job - only runs if quality and CI checks pass
  release:
    runs-on: ubuntu-latest
    needs: [quality-check, ci-check]
    permissions:
      contents: write
      packages: write
    steps:
      - uses: actions/checkout@v4
      - name: Detect container manifest
        id: container_manifest
        uses: ./.github/actions/detect-container-manifest
      - name: Prepare pnpm
        uses: ./.github/actions/setup-pnpm
      - uses: actions/setup-node@v4
        with: { node-version: 22, cache: 'pnpm' }
      - run: corepack enable
      - run: pnpm install --frozen-lockfile || pnpm install --no-frozen-lockfile
      - run: pnpm run build

      - name: Bin smoke check
        run: node scripts/ci/check-bins.mjs
      
      - name: Generate SBOM
        run: |
          SYFT_VERSION="1.33.0"
          SYFT_TAR="syft_${SYFT_VERSION}_linux_amd64.tar.gz"
          SYFT_CHECKSUMS="syft_${SYFT_VERSION}_checksums.txt"
          curl -fsSLO "https://github.com/anchore/syft/releases/download/v${SYFT_VERSION}/${SYFT_TAR}"
          curl -fsSLO "https://github.com/anchore/syft/releases/download/v${SYFT_VERSION}/${SYFT_CHECKSUMS}"
          grep "${SYFT_TAR}" "${SYFT_CHECKSUMS}" | sha256sum --check --status
          tar -xzf "${SYFT_TAR}" syft
          ./syft packages dir:. -o cyclonedx-json > sbom.json
          rm -f "${SYFT_TAR}" "${SYFT_CHECKSUMS}" syft
      - name: Install Podman
        if: steps.container_manifest.outputs.skip != 'true'
        run: |
          sudo apt-get update
          sudo apt-get install -y podman
          podman version
      - name: Build container image
        if: steps.container_manifest.outputs.skip != 'true'
        run: |
          podman build -f "${{ steps.container_manifest.outputs.dockerfile }}" -t ${{ github.repository }}:${{ github.ref_name }} .
      
      - name: Sign with Sigstore
        run: |
          # Placeholder for Sigstore signing
          printf "%s\n" "Signing artifacts with Sigstore..."
      
      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            sbom.json
            security/sigstore/*
          generate_release_notes: true
      
      - name: Deploy Canary
        run: |
          printf "%s\n" "Deploying canary version..."
          # Placeholder for canary deployment
