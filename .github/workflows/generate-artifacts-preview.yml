name: Generate Artifacts Preview

on:
  workflow_dispatch:
  pull_request:
    paths:
      - 'specs/**'
      - 'templates/**'
      - 'scripts/**'
      - 'docs/**'
      - 'tests/**'
      - 'artifacts/**'
      - '.github/workflows/generate-artifacts-preview.yml'

permissions:
  contents: read
  actions: read
  pull-requests: write
  issues: write
  id-token: none

jobs:
  preview:
    runs-on: ubuntu-latest
    env:
      AE_HOST_STORE: ${{ github.workspace }}/.pnpm-store
      PNPM_STORE_PATH: ${{ github.workspace }}/.pnpm-store
    steps:
      - uses: actions/checkout@v4
      - name: Prepare pnpm
        uses: ./.github/actions/setup-pnpm
      - name: Ensure pnpm cache dir
        run: mkdir -p "$AE_HOST_STORE"
      - name: Cache pnpm store
        uses: actions/cache@v4
        with:
          path: ${{ env.AE_HOST_STORE }}
          key: ${{ runner.os }}-pnpm-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-
      - uses: actions/setup-node@v4
        with:
          node-version: 22
      - name: Enable corepack
        run: corepack enable
      - name: Install dependencies
        run: |
          pnpm fetch --prefer-offline
          if pnpm install --frozen-lockfile --config.confirm=false; then
            echo "pnpm install succeeded with --frozen-lockfile"
          else
            echo "pnpm install --frozen-lockfile failed, falling back to --no-frozen-lockfile"
            pnpm install --no-frozen-lockfile --prefer-offline --config.confirm=false
          fi
      - name: Preview generated artifacts
        run: pnpm run generate:artifacts:preview
      - name: Summarize diff
        run: |
          if [ -f hermetic-reports/spec/generate-artifacts-diff.json ]; then
            echo '## Generate Artifacts Preview' >> "$GITHUB_STEP_SUMMARY"
            node scripts/ci/render-generate-artifacts-summary.mjs \
              hermetic-reports/spec/generate-artifacts-diff.json >> "$GITHUB_STEP_SUMMARY"
          else
            echo 'No diff summary generated' >> "$GITHUB_STEP_SUMMARY"
          fi
      - name: Upload preview report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: generate-artifacts-preview
          path: hermetic-reports/spec/generate-artifacts-diff.json
          if-no-files-found: error

      - name: Comment diff on PR
        if: github.event_name == 'pull_request' && always()
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const path = 'hermetic-reports/spec/generate-artifacts-diff.json';
            const summary = fs.existsSync(path) ? JSON.parse(fs.readFileSync(path, 'utf8')) : null;
            const lines = [];
            lines.push('### Generate Artifacts Preview');
            if (!summary) {
              lines.push('No diff summary generated.');
            } else {
              lines.push(`Generated at: ${summary.generatedAt}`);
              for (const target of summary.targets || []) {
                const status = target.hasChanges ? 'CHANGED' : 'clean';
                lines.push(`- ${target.path}: ${status}`);
                if (target.hasChanges && target.files) {
                  const sample = target.files.slice(0, 10);
                  for (const file of sample) {
                    lines.push(`  - ${file.status} ${file.file}`);
                  }
                  if (target.files.length > sample.length) {
                    lines.push(`  - â€¦ (${target.files.length - sample.length} more)`);
                  }
                }
              }
            }
            const body = lines.join("\n");
            const { data: existing } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number
            });
            const marker = '<!-- generate-artifacts-preview -->';
            const previous = existing.find((c) => c.user.login === 'github-actions[bot]' && c.body.includes(marker));
            const decoratedBody = [body, marker].join("\\n\\n");
            if (previous) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: previous.id,
                body: decoratedBody
              });
            } else {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: decoratedBody
              });
            }
