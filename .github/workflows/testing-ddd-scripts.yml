name: testing-ddd-scripts
on:
  pull_request:
  push:
    branches: [ main ]
permissions:
  contents: read
jobs:
  testing-ddd:
    runs-on: ubuntu-latest
    outputs:
      strict: ${{ steps.gate.outputs.strict }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with: { node-version: '20' }
      - run: npm ci
      - name: Derive TRACE_ID from PR labels
        id: trace
        id: trace
        uses: actions/github-script@v7
        with:
          script: |
            const labels = (context.payload.pull_request?.labels || []).map(l=>l.name);
            const strict = labels.includes("enforce-testing");
            core.setOutput("strict", String(strict));
        uses: actions/github-script@v7
        with:
          script: |
            const labels = (context.payload.pull_request?.labels || []).map(l=>l.name);
            const t = labels.find(n => n.startsWith('trace:'));
            if (t) core.setOutput('trace_id', t.slice(6));
      - name: Property harness (#406)
        env:
          TRACE_ID: ${{ steps.trace.outputs.trace_id }}
        run: |
          if [ -n "${TRACE_ID}" ]; then TRACE_ID=${TRACE_ID} npm run test:property:focus --silent || true; else npm run test:property --silent || true; fi
      - name: Replay runner (#411)
        env:
          TRACE_ID: ${{ steps.trace.outputs.trace_id }}
        run: |
          if [ -n "${TRACE_ID}" ]; then TRACE_ID=${TRACE_ID} npm run test:replay:focus --silent || true; else npm run test:replay --silent || true; fi
      - name: BDD lint (#410)
        run: npm run bdd:lint --silent || true
      - name: Formal GWT format (#407)
        run: |
          if [ -f formal/summary.json ]; then node scripts/formal/format-counterexamples.mjs; fi
      - name: Aggregate artifacts (#408)
        run: npm run artifacts:aggregate --silent || true
      - name: Upload artifacts (summary)
        uses: actions/upload-artifact@v4
        with:
          name: quality-artifacts
          path: |
            artifacts/**
            formal/summary.json
