name: Spec Validation

on:
  pull_request:
    paths: 
      - 'spec/**'
      - '.ae/**'
      - 'packages/spec-compiler/**'
      - 'src/cli/spec-cli.ts'
  push:
    branches: [main]
    paths:
      - 'spec/**'
      - '.ae/**'
      - 'packages/spec-compiler/**'
  workflow_dispatch:
    inputs:
      spec_file:
        description: 'Spec file path to validate'
        required: false
        default: 'spec/example-spec.md'
        type: string
      output_file:
        description: 'Output AE-IR file path'
        required: false
        default: '.ae/ae-ir.json'
        type: string

env:
  SPEC_FILE: ${{ github.event.inputs.spec_file || 'spec/example-spec.md' }}
  OUTPUT_FILE: ${{ github.event.inputs.output_file || '.ae/ae-ir.json' }}

jobs:
  spec-validation:
    runs-on: ubuntu-latest
    name: Validate AE-Spec and AE-IR
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 8

      - name: Install dependencies
        run: pnpm install

      - name: Build spec-compiler
        run: |
          cd packages/spec-compiler
          pnpm run build

      - name: Compile AE-Spec ‚Üí AE-IR
        run: |
          pnpm ae-framework spec compile \
            --input ${{ env.SPEC_FILE }} \
            --output ${{ env.OUTPUT_FILE }}

      - name: Lint AE-IR (Check for ambiguity/undefined/conflicts)
        run: |
          pnpm ae-framework spec lint \
            --input ${{ env.OUTPUT_FILE }} \
            --max-errors 0 \
            --max-warnings 10

      - name: Validate complete spec workflow
        run: |
          pnpm ae-framework spec validate \
            --input ${{ env.SPEC_FILE }} \
            --output .ae/ae-ir-validated.json \
            --max-errors 0 \
            --max-warnings 10

      - name: Check AE-IR structure
        run: |
          node scripts/validate-aeir-structure.cjs "${{ env.OUTPUT_FILE }}"

      - name: Archive AE-IR artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ae-ir-artifacts
          path: |
            .ae/ae-ir.json
            .ae/ae-ir-validated.json
          retention-days: 30

      - name: Comment on PR with validation results
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            
            try {
              const ir = JSON.parse(fs.readFileSync('${{ env.OUTPUT_FILE }}', 'utf8'));
              
              const summary = `## üîç AE-Spec Validation Results
              
              ‚úÖ **Specification compiled successfully!**
              
              ### üìä Statistics
              - **Entities**: ${ir.domain?.length ?? 0}
              - **API Endpoints**: ${ir.api?.length ?? 0}
              - **Use Cases**: ${ir.usecases?.length ?? 0}
              - **Business Invariants**: ${ir.invariants?.length ?? 0}
              - **Glossary Terms**: ${ir.glossary?.length ?? 0}
              
              ### üìã Generated AE-IR
              - File: \`.ae/ae-ir.json\`
              - Version: ${ir.version}
              - Generated: ${ir.metadata.created}
              
              The AE-IR file has been validated and is ready for use as the Single Source of Truth (SSOT) for subsequent phases.
              `;
              
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: summary
              });
            } catch (error) {
              console.log('Could not read AE-IR file or post comment:', error.message);
            }