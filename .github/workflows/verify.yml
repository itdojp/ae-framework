name: Verify Traceability
on:
  push:
    branches: [main]
    tags: ['v*'] # Verify traceability on releases
  pull_request:
    branches: [main]

jobs:
  traceability:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Generate traceability matrix
        run: |
          chmod +x ./scripts/verify/traceability.sh
          ./scripts/verify/traceability.sh
      - name: Upload traceability artifact
        uses: actions/upload-artifact@v4
        with:
          name: traceability-matrix
          path: |
            traceability.csv
            traceability.json
      - name: Check coverage thresholds
        run: |
          # Placeholder for actual threshold checks
          echo "Checking traceability coverage..."
          if [ -f traceability.csv ]; then
            echo "Traceability matrix generated successfully"
          else
            echo "Failed to generate traceability matrix"
            exit 1
          fi
  model-check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Setup Java (for TLC)
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: Run model checks (TLA+)
        run: |
          node --version
          java -version
          npm run verify:model || true
      - name: Upload model-check artifacts
        uses: actions/upload-artifact@v4
        with:
          name: model-check-results
          path: |
            artifacts/codex/model-check.json
            artifacts/codex/*.tlc.log.txt
  post-summary:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    needs: [traceability, model-check]
    steps:
      - uses: actions/checkout@v4
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts_dl
      - name: Build PR comment summary
        id: build
        run: |
          set -e
          TRACE_FILE=$(find artifacts_dl/traceability-matrix -name 'traceability.csv' 2>/dev/null | head -1)
          MODEL_FILE=$(find artifacts_dl/model-check-results -name 'model-check.json' 2>/dev/null | head -1)
          TRACE_JSON=$(find artifacts_dl/traceability-matrix -name 'traceability.json' 2>/dev/null | head -1)
          echo "TRACE_FILE=$TRACE_FILE" >> $GITHUB_OUTPUT
          echo "MODEL_FILE=$MODEL_FILE" >> $GITHUB_OUTPUT
          echo "TRACE_JSON=$TRACE_JSON" >> $GITHUB_OUTPUT
          {
            echo "### 🔍 Verification Summary"
            if [ -f "$TRACE_JSON" ]; then
              scenarios=$(jq -r '.total' "$TRACE_JSON" 2>/dev/null || echo 0)
              covered_tests=$(jq -r '.testsLinked' "$TRACE_JSON" 2>/dev/null || echo 0)
              covered_impl=$(jq -r '.implLinked' "$TRACE_JSON" 2>/dev/null || echo 0)
              covered_formal=$(jq -r '.formalLinked' "$TRACE_JSON" 2>/dev/null || echo 0)
              echo "- Traceability: ${scenarios} scenarios; tests: ${covered_tests}; impl: ${covered_impl}; formal: ${covered_formal}"
              echo "\n<details><summary>Unlinked (top 5)</summary>"
              jq -r '.rows[] | select(.test=="N/A" or .impl=="N/A" or .formal=="N/A") | "- " + .scenario + " (id: " + .id + ") test:" + .test + " impl:" + .impl + " formal:" + .formal' "$TRACE_JSON" 2>/dev/null | head -5 || true
              echo "</details>"
            elif [ -f "$TRACE_FILE" ]; then
              total=$(wc -l < "$TRACE_FILE")
              scenarios=$((total-1))
              covered_tests=$(tail -n +2 "$TRACE_FILE" | cut -d, -f2 | grep -vc '^N/A$' || true)
              covered_impl=$(tail -n +2 "$TRACE_FILE" | cut -d, -f3 | grep -vc '^N/A$' || true)
              echo "- Traceability: ${scenarios} scenarios; tests: ${covered_tests}; impl: ${covered_impl}"
            else
              echo "- Traceability: (no matrix artifact)"
            fi
            if [ -f "$MODEL_FILE" ]; then
              ok=$(jq '[.tlc.results[] | select(.ok==true)] | length' "$MODEL_FILE" 2>/dev/null || echo 0)
              total=$(jq '(.tlc.results | length) + 0' "$MODEL_FILE" 2>/dev/null || echo 0)
              echo "- Model Check (TLC): ${ok}/${total} modules ok"
            else
              echo "- Model Check: (no summary artifact)"
            fi
          } > pr-summary.md
          cat pr-summary.md
      - name: Post PR comment
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const body = fs.readFileSync('pr-summary.md', 'utf8');
            github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.pull_request.number,
              body
            });
